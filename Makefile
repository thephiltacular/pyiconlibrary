ROOTDIR=$(PWD)

PNG_DIR='png'
SRC = pyiconlibrary

.PHONY:	help	clean	lint	format	format_check\
lint_check_flake8	lint_check_all	format_check_black	format_check_isort	format_check_all  \
install_poetic	install_depends tests

# SHELL:=/bin/bash

.DEFAULT_GOAL := help
help:  ## See your make options below:
	@sed -ne '/@sed/!s/## //p' $(MAKEFILE_LIST)
clean: ## Remove Autogenerated build files
	rm -rf build/
	rm -rf devel/
	rm -rf logs/

lint: lint_check_all

format: format_black format_isort

format_check: format_check_all

lint_check_flake8: ## check linting with flake
	flake8 --max-line-length=101 --ignore=E402,F841,F401,E302,E305,E203,W503,C901,F403 $(SRC)/ || pflake8

lint_check_all:	lint_check_flake8	## Run all linters

format_check_black: # Run black formatter for python
	black --line-length=101 --check $(SRC)/

format_check_isort:	# Run isort for python libraries
	isort **/*.py --check-only

format_check_all:	format_check_black format_check_isort	# Run all formatters

format_black: #Run black formatter for python scripts
	black $(SRC)/

format_isort:	# Run isort for python libraries
	isort **/*.py 

install_poetry:
	# install poetry if you do n
	curl -sSL https://install.python-poetry.org | python3 -
	# Check if installation worked
	poetry --version
	# Update if needed:
	poetry self update
	# Add poetry to your bash completion file:
	poetry completions bash >> ~/.bash_completion
	source ~/.bash_completion
	echo "Poetry has been installed, please source ~/.bash_completion"

install_depends:
	poetry install
	poetry shell
	pre-commit install
	pre-commit run --all-files
	echo "Checking if png folder exists ...."
	[ -d $(SRC)/$(PNG_DIR) ] && echo "PNG folder exists, skipping unzip" || unzip icons.zip && mv png pyiconlibrary

tests:
	python3 tests/test_icon.py
